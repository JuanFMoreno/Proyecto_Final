<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPiromano</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inicializar variables

state = e_state.idle;
dir = -1;
movespeed = 1;
grav = 0.2;
hsp = 0;
vsp = 0;
hp = 100;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movimiento y colisión con balas y paredes

hsp = dir * movespeed;
vsp += grav;
image_speed = 0.2


switch (state)
    {
    case e_state.idle:
        {
        hsp=0;
        image_index = 1;
        if (distance_to_object(obj_player)&lt;100)
            {
            state = e_state.chase
            }
        }
        break;
    case e_state.chase:
        {
        dir = sign(obj_player.x - x);
        hsp = dir * movespeed;
        if (hsp &lt; 1)
        {
        sprite_index = sprPiromano;
        }
        else
            {
            sprite_index = sprPiromanoDer
            }
        if (distance_to_object(obj_player)&gt; 110)
            {
            state = e_state.idle
            }
        }
        break;
    }

// Colisión horizontal

if (place_meeting(x + hsp, y, obj_wall))
    {
    while(!place_meeting(x + sign(hsp), y, obj_wall))
        {
        x += sign(hsp);
        }
    hsp = 0;
    dir *= -1;
    }
x += hsp;

//Colisión vertical

if(place_meeting(x, y + vsp, obj_wall))
{
    while(!place_meeting(x, y + sign(vsp), obj_wall))
    {
        y += sign(vsp);
    }
    vsp = 0;
       
}
y += vsp;

//Ataque

if(distance_to_object(obj_player)&lt;=20)
    {
    sprite_index = sprPiromano1;
    if (hsp &gt; 1)
        {
        sprite_index = sprPiromano1Der;
        }
    if (hsp &lt; 1)
        {
        sprite_index = sprPiromano1;
        }
    }
    if (sprite_index = sprPiromano1) || sprite_index = sprPiromano1Der
        {
        if (place_meeting(x,y,obj_player))
            {
            with obj_player
                {
                if!(keyboard_check(ord('E')))
                    {
                    health = health - 1
                    }
                else
                    {
                    health = health
                    }
                }
            }
        }
else
    {
    sprite_index = sprPiromano
    }

if (hp &lt; 1)
    {
    instance_create(x, y, objDeath);
    instance_destroy();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objAttack">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp = hp - 5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSuperBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp=hp-5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objCoctel">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp = hp - 10
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp = hp - 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
draw_healthbar(x,y,x+50,y+10,hp,c_black,c_red,c_green,0,true,true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
